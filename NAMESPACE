# Generated by roxygen2: do not edit by hand

S3method("edge_attr<-",default)
S3method("edge_attr<-",multigraph)
S3method("edge_data<-",multigraph)
S3method("edge_data<-",wiring_diagram)
S3method("graph_attr<-",default)
S3method("graph_data<-",multigraph)
S3method("graph_data<-",wiring_diagram)
S3method("input_port_attr<-",wiring_diagram)
S3method("input_port_data<-",wiring_diagram)
S3method("input_ports<-",wiring_diagram)
S3method("node_attr<-",default)
S3method("node_data<-",multigraph)
S3method("node_data<-",wiring_diagram)
S3method("output_port_attr<-",wiring_diagram)
S3method("output_port_data<-",wiring_diagram)
S3method("output_ports<-",wiring_diagram)
S3method(add_edge,multigraph)
S3method(add_edge,wiring_diagram)
S3method(add_node,multigraph)
S3method(add_node,wiring_diagram)
S3method(add_nodes,default)
S3method(edge_attr,default)
S3method(edge_attr,multigraph)
S3method(edge_data,multigraph)
S3method(edge_data,wiring_diagram)
S3method(edges,multigraph)
S3method(edges,wiring_diagram)
S3method(graph_attr,default)
S3method(graph_data,multigraph)
S3method(graph_data,wiring_diagram)
S3method(has_edge,multigraph)
S3method(has_node,multigraph)
S3method(input_node,wiring_diagram)
S3method(input_port_attr,wiring_diagram)
S3method(input_port_data,wiring_diagram)
S3method(input_ports,wiring_diagram)
S3method(is_directed,multigraph)
S3method(nedges,multigraph)
S3method(nedges,wiring_diagram)
S3method(neighbors,default)
S3method(nnodes,multigraph)
S3method(nnodes,wiring_diagram)
S3method(node_attr,default)
S3method(node_data,multigraph)
S3method(node_data,wiring_diagram)
S3method(nodes,multigraph)
S3method(nodes,wiring_diagram)
S3method(output_node,wiring_diagram)
S3method(output_port_attr,wiring_diagram)
S3method(output_port_data,wiring_diagram)
S3method(output_ports,wiring_diagram)
S3method(predecessors,default)
S3method(predecessors,multigraph)
S3method(print,edge)
S3method(print,graph)
S3method(rem_edge,multigraph)
S3method(rem_node,multigraph)
S3method(source_port,wiring_diagram)
S3method(successors,default)
S3method(successors,multigraph)
S3method(target_port,wiring_diagram)
export("edge_attr<-")
export("edge_data<-")
export("graph_attr<-")
export("graph_data<-")
export("input_port_attr<-")
export("input_port_data<-")
export("input_ports<-")
export("node_attr<-")
export("node_data<-")
export("output_port_attr<-")
export("output_port_data<-")
export("output_ports<-")
export(add_edge)
export(add_node)
export(add_nodes)
export(annotate)
export(annotation_db)
export(annotator)
export(edge_attr)
export(edge_data)
export(edges)
export(graph_attr)
export(graph_data)
export(has_edge)
export(has_node)
export(input_node)
export(input_port_attr)
export(input_port_data)
export(input_ports)
export(is_directed)
export(multiedge)
export(multigraph)
export(nedges)
export(nnodes)
export(node_attr)
export(node_data)
export(nodes)
export(output_node)
export(output_port_attr)
export(output_port_data)
export(output_ports)
export(predecessors)
export(read_graphml)
export(record)
export(record_expr)
export(record_file)
export(rem_edge)
export(rem_node)
export(remote_annotation_db)
export(source_port)
export(successors)
export(target_port)
export(wiring_diagram)
export(write_graphml)
import(R6)
import(purrr)
import(xml2)
import(zeallot)
importFrom(dbplyr,sql)
importFrom(rlang,is_empty)
importFrom(rlang,is_named)
importFrom(rlang,names2)
importFrom(rlang,seq2)
importFrom(rlang,seq2_along)
importFrom(tibble,tibble)
